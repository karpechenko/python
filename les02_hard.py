# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

# equation = 'y = -12x + 11111140.2121'
# x = 2.5
# вычислите и выведите y

equation = 'y = -12x + 11111140.2121'
x = 2.5
a = int(equation[equation.find('=') + 1:equation.find('x')])
b = float(equation[equation.find('+') + 1:])
y = a * x + b 
print(y)


# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
# date = '01.11.1985'

# Примеры некорректных дат
# date = '01.22.1001'
# date = '1.12.1001'
# date = '-2.10.3001'

date = input('Введите дату dd.mm.yyyy ')
i = 0
short_month = [2, 4, 6, 9, 11]
point1 = date.find('.')
point2 = date.find('.', point1 + 1)
day = date[0:point1]
month = date[point1 + 1:point2]
year = date[point2 + 1:]

if year.isdigit():
    if len(year) >= 1 and len(year) <= 4:
        if int(year) >= 1 and int(year) <= 9999:
            i = 1
            if len(year) < 4:
                year = year.zfill(4)
        else:
            print('Год указан не верно-', year)
    else:
        print('год указан не верно-', year)
else:
    print('Год указан не верно-', year)

if month.isdigit():
    if len(month) >= 1 and len(month) <= 2:
        if int(month) >= 1 and int(month) <= 12:
            i += 1 
            if len(month) < 2:
                month = month.zfill(2)
        else:
            print('месяц указан неверно-', month)
    else:
        print('месяц указан неверно-', month)
else:
    print('месяц указан неверно-', month)

if day.isdigit():
    if len(day) >=1 and len(day) <= 2:
        if int(month) in short_month:
            if int(day) >= 1 and int(day) <= 30:
                i += 1
                if len(day) < 2:
                    day = day.zfill(2)
            else:
                print('день указан неверно-', day)
        else:
            if int(day) >= 1 and int(day) <= 31:
                i += 1
                if len(day) < 2:
                    day = day.zfill(2)
            else:
                print('день указан неверно-', day)
    else:
        print('день указан неверно-', day)
else:
    print('день указан неверно-', day)
           
if i == 3:
    print('Формат даты задан верно')
    print(day + '.' + month + '.' + year)


# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

room_num = int(input('Введите номер комнаты: '))
a = 0
b = 2000
n = 1
room_lst = [0]
floor = 0

while a != b:
    k = 0
    while k != n:
        i = 0
        while i != n:
            room_lst.append(room_lst[n - 1] + 1)
            room_lst.pop(0)
            i += 1
        floor += 1
        if room_num in room_lst:
            print('этаж-', floor, 'порядковый номер на этаже-', room_lst.index(room_num)+1)
            break
        k += 1
    room_lst.append(room_lst[n - 1])
    if room_num in room_lst:
        break
    n += 1
    a += 1
